Python中的函数：
    认识函数-EX01
        什么是函数
            函数，function，即功能
            函数分为两种：
                系统自带函数：功能已经封装在系统中
                自定义函数：自由度高
        函数的功能
            函数的核心，不同的函数实现不同的功能

        Python中函数的定义方式
            定义一个函数包括两部分的含义：
                申明这个指定的部分是函数，而不是其他对象
                要定义这个函数包含的功能
            格式：
                def 函数名():
                    函数内容；
                    函数内容；

                def function01():
                    a=8;
                    print a;
    形参与实参-EX02
        函数中参数的概念
            函数执行功能时用到的数据
        什么是形参
            形参一般发生在函数定义的过程中
            一般指参数的名称，不代表参数的值
            即形式上的参数，仅仅只表明一个函数李曼那个位置有那个名称的参数
        什么是实参
            实参与形参互补
            实参一般在函数调用时出现，指参数具体的值
        参数的传递
            从函数调用的地方传到函数定义处
        关键参数
            Python中一个函数中出现多个参数时，通过参数的名字直接给我们的参数赋值
            这些参数称之为关键参数
    全局变量和局部变量-EX03
        什么是作用域
            Python中一个变量是在一定的范围内起作用的，这个范围就称为作用域
        局部变量
            作用域在一定范围内而非全局都起作用的变量，成为局部变量
            函数中，变量如果没有进行全局变量申明，就默认为局部变量
        全局变量
            让某些变量的作用于为全局需要将变量申明为全局变量
            global:全局变量申明的关键字
                全局变量i：global i；
    函数的使用和返回值-EX04
        函数的调用
            定义一个函数后直接输出函数名即可调用
        函数的返回值
            有返回值的函数可一返回一个或多个值
            通过return语句实现
    文档字符串（*）
        什么是文档字符串
            Python中函数数量多了带来的函数杂乱问题：
                开发时为每个函数写一个文档说明
                使用Python中所特有的特性-文档字符串，即在每个函数开通的地方加上一行说明性文字
        使用详解-EX05
            使用规则
                1.冒号下第一行
                2.使用三引号进行
                3.第二行为空行不加任何东西。第一行为函数功能的概述，第三行往下为函数功能的具体注释
                4.文档字符串的句末使用句号（。）结束
                5.英文开头的注释开头字幕要大写，中文注释没有要求。
            查看文档字符串
                1.print 函数名.__doc__
                    输出文档字符串的内容
                2.help(函数名)
                    输出函数内参数以及文档字符串
        举例：
            def func01(i,j):
            '''这个函数实现一个乘法运算。

            函数会返回一个乘法运算的结果。'''
            k=i*j;
            return k;
            print func01.__doc__;
            help(func01);
            print func01(4,7);
